stages:
  - build
  - release


build:
  only:
  - tags
  tags:
    - docker
  image: golang:latest
  artifacts:
    expire_in: 1 hour
    paths:
    - bin/application_linux_amd64
  stage: build
  script:
    - export GO111MODULE=on
    - mkdir ./bin
    - GOOS=linux GOARCH=amd64 go build -o ./bin/application_linux_amd64 ./main.go


release:
  tags:
    - docker
  image: docker:latest
  only:
    - tags
  stage: release
  script:
    - docker build --pull -t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG .

    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG

    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest

    - echo "---------------------------------------"
    - echo "Cleanup"
    - echo "---------------------------------------"
    - docker rmi $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - docker rmi $CI_REGISTRY_IMAGE:latest
    - docker system prune -f

